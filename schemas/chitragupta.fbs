namespace Ecosystem;

enum Gender : byte { Male = 1, Female = 0}
enum Reproduction : byte { Sexual = 1, Asexual = 0}

table Organism {

    /// Fixed for a species
    kind:string (required);
    kingdom:string (required);
    chromosome_number:ulong (required);
    food_chain_rank:ulong (required);
    is_asexual:Reproduction (required);
    age_fitness_on_death_ratio:double (required);
    conceiving_probability:double (required);
    mating_probability:double (required);
    mating_age_start:ulong (required);
    mating_age_end:ulong (required);
    max_age:ulong (required);
    mutation_probability:double (required);
    offsprings_factor:double (required);
    height_on_speed:double;
    height_on_stamina:double;
    height_on_vitality:double;
    weight_on_speed:double;
    weight_on_stamina:double;
    weight_on_vitality:double;
    vitality_on_appetite:double;
    vitality_on_speed:double;
    stamina_on_appetite:double;
    stamina_on_speed:double;
    theoretical_maximum_base_appetite:double;
    theoretical_maximum_base_height:double;
    theoretical_maximum_base_speed:double;
    theoretical_maximum_base_stamina:double;
    theoretical_maximum_base_vitality:double;
    theoretical_maximum_base_weight:double;
    theoretical_maximum_height:double;
    theoretical_maximum_speed:double;
    theoretical_maximum_weight:double;
    theoretical_maximum_height_multiplier:double;
    theoretical_maximum_speed_multiplier:double;
    theoretical_maximum_stamina_multiplier:double;
    theoretical_maximum_vitality_multiplier:double;
    theoretical_maximum_weight_multiplier:double;

    ///  Fixed for an organism
    name:string (key, required);
    gender:Gender (required);
    generation:ulong (required);
    immunity:double (required);
    chromosome:string (required);
    base_appetite:double;
    base_height:double;
    base_speed:double;
    base_stamina:double;
    base_vitality:double;
    base_weight:double;
    height_multiplier:double;
    speed_multiplier:double;
    stamina_multiplier:double;
    vitality_multiplier:double;
    weight_multiplier:double;
    max_height:double;
    max_weight:double;

    /// Stats affected by age
    age:ulong (required);
    height:double (required);
    weight:double (required);
    age_death_factor:double (required);
    fitness_death_factor:double (required);
    death_factor:double (required);
    static_fitness:double (required);
    max_appetite_at_age:double;
    max_speed_at_age:double;
    max_stamina_at_age:double;
    max_vitality_at_age:double;

    /// Miscellaneous attributes
    vision_radius:double;
    sleep_restore_factor:double;

}

table Species {
    kind:string (key, required);
    repeated organism:Organism (required);
}

table World {
    year:ulong (key, required);
    repeated species:Species (required);
}

root_type World;